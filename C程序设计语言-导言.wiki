# 导言

# 入门
对于C语言每个程序都从main函数的起点开始运行.这意味着每个程序都必须在某个位置包含一个main函数.  
#include 用于引入包 stdio.h 是引入包含标准输入/输出库.  
在 printf 函数的参数中,只能用\n表示换行.如果用程序的换行替代\n, GCC会在编译时产生一条作物信息.  

### 变量和表达式
所有变量必须先声明后使用,需要声明类型.  
- int
- float
- char
- short
- long
- double
这些数据类型对象的大小取决于具体的机器.另外还存在这些基本数据类型的
- 数组
- 结构
- 联合
- 指向这些类型的指针
- 返回这些类型的函数
这些将在后续章节讲解.  
while循环体,可是是用花括号括起来的一条或者多条语句.也可以是不用花括号的单条语句.  
printf 支持的格式
- %d     按照十进制整数打印
- %6d    .................. 至少6个字符宽
- %f     按照浮点数打印
- .2f    .............. 小数点后有两位小数
- 6.2f   .............. 至少6个字符宽,小数点后有两位小数
- %o     表示八进制数
- %x     表示十六进制数
- %c     表示字符
- %s     表示字符串
- %%     便是百分号本身(%)

### 符号常量
`#define` 指令可以符号名定义为一个特定的字符串.  
`#define LOWER 0` 定义常量LOWER为0.

### 字符的输入/输出
标准库提供了一次读/写一个字符的函数,其中最简单的是
- `getchar`
- `putchar`
每次调用getchar()从文本流中读入下一个输入字符串,并将其作为结果值返回.  
putchar()把变量以字符的形式打印出来,一本是显示在屏幕上.  
EOF 是定义在stdio.h种的一个整形数,这个特殊值于任何实际字符都不同,表示end of file.  

### 参数----传值调用
传递给被调用函数的参数存放在临时变量中,而不是存放在原来的变量中.  
不同于Fortran等语言的"通过引用调用".  
最主要的区别就是,在C中,被调用的函数不能直接修改主调函数中变量的值,而只能修改其私有的临时副本的值.  

### 字符数组
有些函数返回有用的值,而有些函数仅用于执行一些动作,并不返回值,它返回的类型为void,显式的说明该函数不反悔任何值.  
getline函数把'\0'(即非空字符,其值为0)插入到他创建的数组的末尾,以标记字符串的结束.这一约定已被C采用,如
- "hello\0"
getline的分解,遍历每行文件(区分'\n'和'EOF'),所有字符push到一个数组.for循环之后(i为最大空位),arr[i]='\0',数组这样结尾
- `h,e,l,l,o,\n,\0`

### 外部变量与局部变量

函数中的每个局部变量只有在函数被调用的时候存在,在函数执行完毕推出时消失.又叫做自动变量.  
外部变量必须定义在所有函数之外,且只能定义一次,定义之后编译程序将为它分配储存单元.在每个需要访问外部变量的函数中,必须声明相应的外不便灵,此时说明其类型.  
- `extern`语句显式声明,也可用过上下文隐式声明.
在通常的做法中,所有外部变量的定义都放在源文件的 开始处,这样就可以省略 extern 声明.  
人们通常把变量和函数的 extern 声明放在一个单独的文件中(习惯上称之 为头文件),并在每个源文件的开头使用#include 语句把所要用的头文件包含进来。后缀 名.h 约定为头文件名的扩展名.

